<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- scan all of the classes in the Web package, to create bean and and 
		the feature of automatic dependency injection -->
	<context:component-scan base-package="com.accenture" />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<mvc:annotation-driven />
	<!-- don't handle the static resource -->
	<mvc:default-servlet-handler />

	<!-- These two classes are used to start the Spring MVC annotation and join 
		the controller and method mapping into the container -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	

	<bean id="businessException" class="com.accenture.exception.BusinessException"></bean>
	<bean id="checkJosephArgu" class="com.accenture.service.impl.CheckJosephArgu"></bean>
	<bean id="josephServiceImpl" class="com.accenture.service.impl.JosephServiceImpl">
		<property name="checkJosephArgument" ref="checkJosephArgu"></property></bean>
	<bean id="josephBusninessImpl" class="com.accenture.business.impl.JosephBusninessImpl">
		<property name="josephProblem" ref="josephServiceImpl"></property>
	</bean>

	<bean id="josephController" class="com.accenture.controller.JosephController">
		<property name="josephBusniness" ref="josephBusninessImpl"></property>
	</bean>
	<bean id="fibonacciServiceImpl" class="com.accenture.service.impl.FibonacciServiceImpl">

	</bean>
	<bean id="fibonacciController" class="com.accenture.controller.FibonacciController"></bean>
	<bean id="logAspect" class="com.accenture.aop.LogAspect"></bean>
	<!-- This class is used to analyze Spring MVC view -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- Specify your own defined validator -->
	<mvc:annotation-driven validator="validator" />

	<!-- The following validator Conversionservice will automatically register 
		when using MVC: Annotation-driven -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!--default to use Classpath validationmessages. Properties if not added -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- Internationalized Message resource files (mainly for display/error 
		message customization in this system) -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- Be sure to navigate to classpath in the Web environment otherwise 
					default to search at current Web application -->
				<value>classpath:messages</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>
</beans>